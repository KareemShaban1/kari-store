////////// get values from request
        ////// get value from url
                - $request->query('name');
        ////// get value from input
                - $request->input('name');
                - $request->post('name');
                - $request->get('name');
                - $request['name'];
                - $request->name;
        ////// return array of all request data
                - $request->all();
        ////// get specific input 
                - $request->only(['name']);
        ////// get all inputs except that input
                - $request->except(['name']);

        

        /////////////////   Model  //////////////////

        ////// Add new model | row of data
                //// first way
                  // $category = new Category();
                  // $category->name = $request->post('name');
                  // $category->parent_id = $request->post('parent_id');
                  // $category->status = $request->post('status');
                  // $category->save();

                //// second way
                  // $category = new Category($request->all());
                  // $category->save();

                //// third way 
                  // $category = Category::create($request->all());

                    

                /////////// Update Model  

                //// first way
                  // $category->update($request->all());

                //// second way
                  // $category->fill($request->all());
                  // $category->save();


                //////// Delete Model

                //// First way
                  // $category = Category::findOrFail($id);
                  // $category->delete();

                //// Second way
                  // Category::where('id','=',$id)->delete();

                //// Third way
                  // Category::destroy($id);



                //////// file attributes
                $file->getClientOriginalName();      // file name
                $file->getSize();                    // file size
                $file->getClientOriginalExtension(); // file extension
                $file->getMimeType();                // 


                // old('input_name')   // return input value in the previous request




Product Variations

Size : S , M , L , XL
Color : Red , Green , Blue
Material: Cotton , Other


Product (id , name , price , image , sku , ..... )
Attribute (id , name)
Attribute Values (id , attribute_id , key , value) 

Variations (id , product_id , price , sku , image)
Variations_values (Variation_id , attribute_value_id)



///////////////////////////////////////////

"redirect user to login page after registration"

in Laravel\Fortify\Http\Controllers\RegisteredUserController;

1- comment this code =>  $this->guard->login($user);

in App\Http\Controllers\Auth\RegisteredUserController;

1- in store function parameter (RegisterResponse $response)
2- remove auth 
3- change the redirect return to 
        // Custom redirect logic
        return $response->redirect(route('login'));
4- add this function in Controller
        public function registered(Request $request, $user)
        {
        // Custom redirect logic
        return redirect()->route('login');
        }        

////////////////////////////////////////

// restrictOnDelete(Default) // if parent row has childeren rows it can't be deleted 
// cascadeOnDelete // if parent row has childeren rows they will be deleted when it delete
// nullOnDelete   // if parent row has childeren rows they will be null when it delete 


/////////////////////



//////////// destination ///////////////
0 => country
1 => governorate
2 => city
3 => neighborhood
/////////////

Notes : 
- Vendor can have many stores 
- store have one vendor

//// isset() => Determine if a variable is declared and is different than NULL
